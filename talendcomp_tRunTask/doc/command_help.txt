Generic return codes    : 
       0: Success
       1: Unknown error
       2: Invalid request
       3: Authentication error
       4: License problem
       5: Invalid parameter
       6: Error formatting response

----------------------------------------------------------
  Command: addLocks
----------------------------------------------------------
Description             : Allow to lock a repository item. Mainly used by the Studio.
Requires authentication : false
Since                   : 4.2
Sample                  : 
{
  "actionName": "addLocks",
  "applicationName": "Studio",
  "authUser": "john.smith@company.com",
  "branch": "trunk",
  "locks": [{
    "itemId": "id1",
    "itemLabel": "label1",
    "itemType": "repository.process"
  }],
  "projectName": "P1"
}

----------------------------------------------------------
  Command: addServer
----------------------------------------------------------
Description             : Create a new execution server, parameter username/password (optional) are used for user authentication to access the JobServer.
Requires authentication : true
Since                   : 4.2
Sample                  : 
{
  "actionName": "addServer",
  "adminConsolePort": 8040,
  "authPass": "admin",
  "authUser": "admin@company.com",
  "commandPort": 8000,
  "description": "Talend runtime server in production",
  "filePort": 8001,
  "host": "localhost",
  "instance": "trun",
  "label": "serverName1",
  "mgmtRegPort": 1099,
  "mgmtServerPort": 44444,
  "monitoringPort": 8888,
  "password": 111111,
  "useSSL": true,
  "username": "test@company.com"
}

----------------------------------------------------------
  Command: associatePreGeneratedJob
----------------------------------------------------------
Description             : Create a new execution task with a pre-generated zip file
Requires authentication : true
Since                   : 5.2
Sample                  : 
{
  "actionName": "associatePreGeneratedJob",
  "active": true,
  "authPass": "admin",
  "authUser": "admin@company.com",
  "description": "task1's description",
  "executionServerName": "serv1",
  "filePath": "'/home/talend/generatedJob.zip'",
  "onUnknownStateJob": "WAIT",
  "taskName": "task1"
}
Specific error codes    : 
       180: file is not a valid file or not exist

----------------------------------------------------------
  Command: createAuthorization
----------------------------------------------------------
Description             : Add user authorization to a project.
- authorizationType can be [ReadWrite, ReadOnly]
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "createAuthorization",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "authorizationType": "ReadWrite",
  "projectName": "project",
  "userLogin": "user@company.com"
}
Specific error codes    : 
       161: The authorizationType specified does not exist.

----------------------------------------------------------
  Command: createBranch
----------------------------------------------------------
Description             : Create a branch into a project
Requires authentication : true
Since                   : 4.2
Sample                  : 
{
  "actionName": "createBranch",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "project1",
  "source": "trunk",
  "target": "branches/branch1"
}
Specific error codes    : 
       150: Database error while creating branch.

----------------------------------------------------------
  Command: createProject
----------------------------------------------------------
Description             : Create a new SVN project and return the project ID. 'trunk', 'branches' & 'tags' folders will also be created.
- TAC will get SVN url from configuration when 'projectSvnLocation' is not provided;
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "createProject",
  "addTechNameAtURL": true,
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "project1",
  "projectType": "[DI|DQ|MDM] (optional)",
  "storage": "[svn|none] (default is 'svn')"
}
Specific error codes    : 
       10: Svn url not set in configuration

----------------------------------------------------------
  Command: createProjectReference
----------------------------------------------------------
Description             : Create project references for the specified project and branch(referenceProjects should use technical label)
Requires authentication : true
Since                   : 5.3
Sample                  : 
{
  "actionName": "createProjectReference",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "branch": "trunk",
  "projectName": "project1",
  "referenceProjects": "Q1/trunk,Q2/branches/branch1,Q3/tags/tag1"
}

----------------------------------------------------------
  Command: createSandboxProject
----------------------------------------------------------
Description             : Allows to create a Sandbox project (internal use)
Requires authentication : false
Since                   : 4.2
Sample                  : 
{
  "actionName": "createSandboxProject",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "MetaProject2",
  "userFirstName": "David",
  "userLastName": "Bowie",
  "userLogin": "userSandbox4@talend.com",
  "userPassword": "admin"
}

----------------------------------------------------------
  Command: createTag
----------------------------------------------------------
Description             : Create a tag into a project
Requires authentication : true
Since                   : 5.3
Sample                  : 
{
  "actionName": "createTag",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "project1",
  "source": "trunk",
  "target": "tags/tag-1_0"
}
Specific error codes    : 
       151: Database error while creating tag.

----------------------------------------------------------
  Command: createTask
----------------------------------------------------------
Description             : Add a new execution task in TAC and return the task ID.
- projectName and jobName: the project and job must exist.
- onUnknownStateJob: could be [WAIT, KILL_TASK, RESTART_TASK, RECOVER_TASK]
- contextName: "Default" is the default value.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "createTask",
  "active": true,
  "addStatisticsCodeEnabled": false,
  "applyContextToChildren": false,
  "authPass": "admin",
  "authUser": "admin@company.com",
  "branch": "trunk",
  "contextName": "Default",
  "description": "task1 for extracting data from DB1",
  "execStatisticsEnabled": false,
  "executionServerName": "serv1",
  "jobName": "job1",
  "jobVersion": "1.0",
  "onUnknownStateJob": "WAIT",
  "projectName": "tproject1",
  "regenerateJobOnChange": false,
  "taskName": "task1"
}

----------------------------------------------------------
  Command: createUser
----------------------------------------------------------
Description             : create a new user.
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "createUser",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "userFirstName": "john",
  "userLastName": "smith",
  "userLogin": "john.smith@company.com",
  "userPassword": "kkE432",
  "userRole": [
    "Administrator",
    "Designer"
  ],
  "userSvnLogin": "jsmith",
  "userSvnPassword": "gvZ543uc",
  "userType": "DI"
}
Specific error codes    : 
       100: Database error while creating a new User.
       101: Not enough allowed users available against license.

----------------------------------------------------------
  Command: deleteProject
----------------------------------------------------------
Description             : Delete a project.
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "deleteProject",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "project1"
}

----------------------------------------------------------
  Command: deleteUser
----------------------------------------------------------
Description             : Delete one user
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "deleteUser",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "userLogin": "john.smith@company.com"
}
Specific error codes    : 
       92: Database error while deleting User.
       93: The user is the last administrator, he can't be removed.

----------------------------------------------------------
  Command: enableSandboxProject
----------------------------------------------------------
Description             : Tells if Sandbox project feature is enabled in configuration.
Requires authentication : false
Since                   : 4.2
Sample                  : 
{"actionName": "enableSandboxProject"}

----------------------------------------------------------
  Command: getArchivaUrl
----------------------------------------------------------
Description             : Returns Artifact repository connection information
Requires authentication : false
Since                   : 5.0
Sample                  : 
{"actionName": "getArchivaUrl"}
Specific error codes    : 
       40: Artifact repository cannot be reached
       41: TAC is not up to date
       42: Artifact repository url is not setup

----------------------------------------------------------
  Command: getCmdLineInfo
----------------------------------------------------------
Description             : Displays the host/port of the active command line. At least primary or secondary command line must be running.
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "getCmdLineInfo",
  "authPass": "admin",
  "authUser": "admin@company.com"
}
Specific error codes    : 
       20: Both command line are down

----------------------------------------------------------
  Command: getDroolsKey
----------------------------------------------------------
Description             : Return a key to be used for Drools
Requires authentication : true
Since                   : 5.2
Sample                  : 
{
  "actionName": "getDroolsKey",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: getLicenseKey
----------------------------------------------------------
Description             : Get license key and customer name
Requires authentication : true
Since                   : 5.2
Sample                  : 
{
  "actionName": "getLicenseKey",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: getNameByTaskId
----------------------------------------------------------
Description             : Get task name by given id
Requires authentication : true
Since                   : 5.1
Sample                  : 
{
  "actionName": "getNameByTaskId",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: getTaskIdByName
----------------------------------------------------------
Description             : Get task id by given label
Requires authentication : true
Since                   : 5.1
Sample                  : 
{
  "actionName": "getTaskIdByName",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "label": "task1"
}
Specific error codes    : 
       79: No task with input name.

----------------------------------------------------------
  Command: getTaskStatus
----------------------------------------------------------
Description             : Return the status of a specific task.
Requires authentication : true
Since                   : 4.2
Sample                  : 
{
  "actionName": "getTaskStatus",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: getTasksRelatedToJobs
----------------------------------------------------------
Description             : Return the complete list of tasks defined in the jobconductor
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "getTasksRelatedToJobs",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: help
----------------------------------------------------------
Description             : Displays the help
 - commandName is optional: <all> will print all the commands,<any command> will print the detailed info of this command
Requires authentication : false
Since                   : 5.2
Sample                  : 
{
  "actionName": "help",
  "commandName": "help"
}

----------------------------------------------------------
  Command: importExecutionPlan
----------------------------------------------------------
Description             : Import the complete list of execution plans and tasks related defined in the execution plan to DB
Requires authentication : true
Since                   : 5.4

----------------------------------------------------------
  Command: listConnection
----------------------------------------------------------
Description             : List dashboard connections
Requires authentication : false
Since                   : 4.2
Sample                  : 
{"actionName": "listConnection"}

----------------------------------------------------------
  Command: listESBTasks
----------------------------------------------------------
Description             : Return the complete list of esb tasks defined in the esb conductor
Requires authentication : true
Since                   : 5.4
License                 : Not available with your current license
Sample                  : 
{
  "actionName": "listESBTasks",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: listExecutionPlans
----------------------------------------------------------
Description             : Return the complete list of execution plans and tasks related defined in the execution plan
Requires authentication : true
Since                   : 5.4
Sample                  : 
{
  "actionName": "listExecutionPlans",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: listLocks
----------------------------------------------------------
Description             : Returns all locked items for the specified project and branch
Requires authentication : false
Since                   : 4.2
Sample                  : 
{
  "actionName": "listLocks",
  "branch": "trunk",
  "projectName": "project1"
}

----------------------------------------------------------
  Command: listProjects
----------------------------------------------------------
Description             : Returns list of all projects
Requires authentication : true
Since                   : 5.4
Sample                  : 
{
  "actionName": "listProjects",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "onlyActive": true,
  "onlySvn": false,
  "withReference": false
}

----------------------------------------------------------
  Command: listTasks
----------------------------------------------------------
Description             : Return the complete list of tasks defined in the jobconductor
Requires authentication : true
Since                   : 5.2
Sample                  : 
{
  "actionName": "listTasks",
  "authPass": "admin",
  "authUser": "admin@company.com"
}

----------------------------------------------------------
  Command: listUsers
----------------------------------------------------------
Description             : Returns list of users of the specified type
Requires authentication : true
Since                   : 5.3
Sample                  : 
{
  "actionName": "listUsers",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "type": "MDM"
}

----------------------------------------------------------
  Command: pauseTask
----------------------------------------------------------
Description             : Pause all the triggers of a specified task.
Requires authentication : true
Since                   : 5.1
Sample                  : 
{
  "actionName": "pauseTask",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: projectExist
----------------------------------------------------------
Description             : Returns true if the project exist.
Requires authentication : true
Since                   : 4.1
Sample                  : 
{
  "actionName": "projectExist",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "projectName": "project1"
}

----------------------------------------------------------
  Command: removeLocks
----------------------------------------------------------
Description             : Allow to unlock a repository item. Mainly used by the Studio.
Requires authentication : false
Since                   : 4.2
Sample                  : 
{
  "actionName": "removeLocks",
  "applicationName": "studio",
  "authUser": "john.smith@company.com",
  "branch": "trunk",
  "locks": [{
    "itemId": "_AMyZYFcAEeCQ34gn79PTjQ",
    "itemLabel": "BM2",
    "itemType": "repository.businessProcess"
  }],
  "projectName": "project1"
}

----------------------------------------------------------
  Command: removeServer
----------------------------------------------------------
Description             : Remove an execution server.
Requires authentication : true
Since                   : 4.2
Sample                  : 
{
  "actionName": "removeServer",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "serverId": 101
}

----------------------------------------------------------
  Command: requestDeploy
----------------------------------------------------------
Description             : Deploy the job linked to the task given in parameter.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "requestDeploy",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}
Specific error codes    : 
       170: Error while deploying the task

----------------------------------------------------------
  Command: requestGenerate
----------------------------------------------------------
Description             : Generate the job linked to the task given in parameter.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "requestGenerate",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: requestPauseTriggers
----------------------------------------------------------
Description             : Request to pause all the triggers of a task.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "requestPauseTriggers",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: requestResumeTriggers
----------------------------------------------------------
Description             : Request to resume all the triggers of a task.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "requestResumeTriggers",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: runTask
----------------------------------------------------------
Description             : Allows to run a task defined in Job conductor by its id. Mode can be 'asynchronous' or 'synchronous'
Requires authentication : true
Since                   : 4.2
Sample                  : 
{
  "actionName": "runTask",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "mode": "synchronous",
  "taskId": 1
}
Specific error codes    : 
       30: Error while launching task
       31: Thread interupted while running
       32: No right to run this task

----------------------------------------------------------
  Command: saveESBTask
----------------------------------------------------------
Description             : Add a new esb execution task in TAC and return the task ID.
- featureType: could be [ROUTE, SERVICE, GENERIC]
- runtimeContext: "Default" is the default value.
Requires authentication : true
Since                   : 5.4
License                 : Not available with your current license
Sample                  : 
{
  "actionName": "saveESBTask",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "description": "esbTask1's description",
  "featureName": "DemoRESTConsumer-feature",
  "featureType": "ROUTE",
  "featureUrl": "mvn:org.example/DemoRESTConsumer-feature/0.1.0-SNAPSHOT/xml",
  "featureVersion": "0.1.0-SNAPSHOT",
  "repository": "repo-snapshot",
  "runtimeContext": "Default",
  "runtimePropertyId": "DemoRESTConsumer",
  "runtimeServerName": "serv1",
  "tag": "tag1",
  "taskName": "esbTask1"
}

----------------------------------------------------------
  Command: setLicenseKey
----------------------------------------------------------
Description             : Set a new license for Talend Administrator Center
Requires authentication : true
Since                   : 5.2
Sample                  : 
{
  "actionName": "setLicenseKey",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "licenseKeyPath": "c:/temp/TDQ_EE.license"
}
Specific error codes    : 
       110: license is not file or not exist
       111: license file operation failed

----------------------------------------------------------
  Command: setRoleLimitation
----------------------------------------------------------
Description             : Remove or add module's right restriction to a role.
- userRole: must be one of those values [ADMIN_ROLE, DESIGNER_ROLE, OPERATION_MANAGER_ROLE, VIEWER_ROLE]
- rightKey: must be one of those values [LICENSE, CONFIG_MANAGMENT, CONFIG_READ, USERS_MANAGMENT, USERS_READ, PROJECTS_MANAGMENT, PROJECTS_READ, LOCK_MANAGMENT, LOCK_READ, SERVERS_MANAGMENT, SERVERS_READ, JOB_CONDUCTOR_MANAGMENT, JOB_CONDUCTOR_READ, AUDIT_MANAGMENT, AUDIT_READ, SOA_MANAGMENT, DASH_SOA_MANAGMENT, SOA_READ, DASH_CONNECTIONS, DASH_JOBS, STUDIO, STUDIO_ALL_READ, STUDIO_READ_MAX, NOTIFICATIONS_MANAGMENT, NOTIFICATIONS_READ, DROOLS_READ, COMMANDLINE_MANAGMENT, BUSINESS_MODELER_MANAGMENT, BUSINESS_MODELER_READ, DOCUMENTATION_MANAGMENT, SOFTWAREUPDATE, TAGS_CREATION, ESB_CONDUCTOR_READ, ESB_CONDUCTOR_MGT, ESB_PUBLISHER_READ, ESB_PUBLISHER_MGT, ESB_SL_READ, ESB_SL_MGT, ESB_SAM_READ, ESB_AUTH_READ, ESB_AUTH_MGT, ESB_SR_READ, ESB_SR_MGT, CONFIG_RIGHTS_MGT, DATABASE_BACKUP]
- limitation: true if a restriction must applied, false otherwise.
Requires authentication : true
Since                   : 5.3
Sample                  : 
{
  "actionName": "setRoleLimitation",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "limitation": true,
  "rightKey": "SERVERS_READ",
  "userRole": "DESIGNER_ROLE"
}

----------------------------------------------------------
  Command: stopTask
----------------------------------------------------------
Description             : Stop the execution of a given task
Requires authentication : true
Since                   : 5.1
Sample                  : 
{
  "actionName": "stopTask",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}

----------------------------------------------------------
  Command: taskLog
----------------------------------------------------------
Description             : Retrieve the logs of the specified task
Requires authentication : true
Since                   : 5.1
Sample                  : 
{
  "actionName": "taskLog",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "taskId": 1
}
Specific error codes    : 
       220: Error happened when reading logs.

----------------------------------------------------------
  Command: updateTask
----------------------------------------------------------
Description             : Allows to update an existing execution task from TAC.
- projectName and jobName: the project and job must exist;
- onUnknownStateJob: could be [WAIT, KILL_TASK, RESTART_TASK, RECOVER_TASK]
- contextName: "Default" is the default value for it.
Requires authentication : true
Since                   : 5.0
Sample                  : 
{
  "actionName": "updateTask",
  "active": true,
  "addStatisticsCodeEnabled": false,
  "applyContextToChildren": false,
  "authPass": "admin",
  "authUser": "admin@company.com",
  "branch": "trunk",
  "contextName": "Default",
  "description": "task1 for extracting data from DB1",
  "execStatisticsEnabled": false,
  "executionServerName": "serv1",
  "jobName": "job1",
  "jobVersion": "1.0",
  "onUnknownStateJob": "WAIT",
  "projectName": "tproject1",
  "regenerateJobOnChange": false,
  "taskId": 1,
  "taskName": "task1"
}

----------------------------------------------------------
  Command: userExist
----------------------------------------------------------
Description             : Return true if a user exist
Requires authentication : true
Since                   : 3.2
Sample                  : 
{
  "actionName": "userExist",
  "authPass": "admin",
  "authUser": "admin@company.com",
  "userLogin": "john.smith@company.com"
}


